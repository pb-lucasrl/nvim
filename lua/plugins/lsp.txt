return {
  {
    "williamboman/mason.nvim",
    dependencies = {
      "williamboman/mason-lspconfig.nvim",
      "neovim/nvim-lspconfig",
      "hrsh7th/nvim-cmp",
      "hrsh7th/cmp-nvim-lsp",
      "hrsh7th/cmp-path",
      "hrsh7th/cmp-buffer",
      "L3MON4D3/LuaSnip",
      "saadparwaiz1/cmp_luasnip",
      "rafamadriz/friendly-snippets",
      "windwp/nvim-autopairs",
    },
    lazy = false,
    config = function()
      -- Set up Mason and Mason-LSPconfig
      require("mason").setup()
      require("mason-lspconfig").setup({
        ensure_installed = { "jdtls", "lua_ls" }, -- Automatically install jdtls
      })

      -- nvim-cmp setup
      local cmp = require("cmp")
      cmp.setup({
        snippet = {
          expand = function(args)
            require("luasnip").lsp_expand(args.body)
          end,
        },
        mapping = cmp.mapping.preset.insert({
          ["<C-Space>"] = cmp.mapping.complete(),
          ["<CR>"] = cmp.mapping.confirm({ select = true }),
          ["<Tab>"] = cmp.mapping(function(fallback)
            if cmp.visible() then
              cmp.select_next_item()
            elseif require("luasnip").expand_or_jumpable() then
              require("luasnip").expand_or_jump()
            else
              fallback()
            end
          end, { "i", "s" }),
          ["<S-Tab>"] = cmp.mapping(function(fallback)
            if cmp.visible() then
              cmp.select_prev_item()
            elseif require("luasnip").jumpable(-1) then
              require("luasnip").jump(-1)
            else
              fallback()
            end
          end, { "i", "s" }),
        }),
        sources = cmp.config.sources({
          { name = "nvim_lsp" },
          { name = "luasnip" },
        }, {
          { name = "buffer" },
          { name = "path" },
        }),
      })

      -- Auto-pairs setup
      require("nvim-autopairs").setup({})
      local cmp_autopairs = require("nvim-autopairs.completion.cmp")
      cmp.event:on("confirm_done", cmp_autopairs.on_confirm_done())


      -- Configure JDTLS
      require("lspconfig").jdtls.setup({
        cmd = { vim.fn.stdpath('data') .. "/mason/bin/jdtls" },
        root_dir = require("lspconfig.util").root_pattern("mvnw", "gradlew", "pom.xml", "build.gradle"),
        capabilities = require("cmp_nvim_lsp").default_capabilities(),
        settings = {
          java = {
            configuration = {
              updateBuildConfiguration = "automatic",
              runtimes = {
                {
                  name = "JavaSE-21",
                  path = "/home/llima13/.sdkman/candidates/java/current",
                  default = true,
                },
              },
            },
          },
        },
      })

      require("lspconfig").lua_ls.setup({})
    end,
  },
}

